// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Fridge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FridgeId");

                    b.Property<Guid>("FridgeModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("FridgeModelId");

                    b.ToTable("Fridges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5f0e29a-0442-4473-9bab-19efa60862f9"),
                            FridgeModelId = new Guid("ebe98db7-3fc6-49b8-9abc-fb87b4bbcf2a"),
                            Name = "Номер 1",
                            OwnerName = "Иван Иванов"
                        },
                        new
                        {
                            Id = new Guid("3f235359-e08e-4571-9e79-2f1f3f36c993"),
                            FridgeModelId = new Guid("ebe98db7-3fc6-49b8-9abc-fb87b4bbcf2a"),
                            Name = "Номер 2",
                            OwnerName = "Пётр Петров"
                        },
                        new
                        {
                            Id = new Guid("6967eb7d-100f-4855-b512-14679298a40b"),
                            FridgeModelId = new Guid("688cd200-173f-4b66-b27a-92e8b02f7a6e"),
                            Name = "Номер 3",
                            OwnerName = "Пётр Петров"
                        },
                        new
                        {
                            Id = new Guid("cc0635a1-66f1-4394-b17f-42dbd405e5c1"),
                            FridgeModelId = new Guid("688cd200-173f-4b66-b27a-92e8b02f7a6e"),
                            Name = "Номер 4",
                            OwnerName = "Иван Иванов"
                        },
                        new
                        {
                            Id = new Guid("7570a579-4ada-420f-966b-c5e5bcf93f06"),
                            FridgeModelId = new Guid("89a3a07c-3094-4fba-89e6-cf5f51ba1d62"),
                            Name = "Номер 5",
                            OwnerName = "Иван Иванов"
                        });
                });

            modelBuilder.Entity("Entities.Models.FridgeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FridgeModelId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ebe98db7-3fc6-49b8-9abc-fb87b4bbcf2a"),
                            Name = "Indesit TIA 140",
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("688cd200-173f-4b66-b27a-92e8b02f7a6e"),
                            Name = "LG GA-B509MAUM",
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("89a3a07c-3094-4fba-89e6-cf5f51ba1d62"),
                            Name = "BOSCH KGN39AI33R",
                            Year = 2021
                        });
                });

            modelBuilder.Entity("Entities.Models.FridgeProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FridgeProductId");

                    b.Property<Guid>("FridgeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FridgeId");

                    b.HasIndex("ProductId");

                    b.ToTable("FridgeProducts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d87318a2-c6ef-449b-855e-9ba1627bb1e3"),
                            FridgeId = new Guid("d5f0e29a-0442-4473-9bab-19efa60862f9"),
                            ProductId = new Guid("f11e43fd-1a39-452e-b78f-cbc692f279b6"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("7d0ba280-d0cf-4eae-9d5c-b96e7dfe9d21"),
                            FridgeId = new Guid("d5f0e29a-0442-4473-9bab-19efa60862f9"),
                            ProductId = new Guid("faf6f6bf-28de-4a00-ace3-460daa990f4c"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("46f2ebd4-1c04-404c-91cd-9a79b818871b"),
                            FridgeId = new Guid("d5f0e29a-0442-4473-9bab-19efa60862f9"),
                            ProductId = new Guid("ea0e3faf-235f-4cf5-bbde-e536f65f3c95"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("4638f438-525e-4c43-9626-dd598a2f9cbb"),
                            FridgeId = new Guid("d5f0e29a-0442-4473-9bab-19efa60862f9"),
                            ProductId = new Guid("e93ed1cc-812b-4859-9ab4-35fda086337b"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("9df1f915-92d1-4169-b4af-52304b1d6d78"),
                            FridgeId = new Guid("3f235359-e08e-4571-9e79-2f1f3f36c993"),
                            ProductId = new Guid("be24a440-b29d-44a5-8f8a-8b59fd546f8c"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("a3fe58e2-a4cd-478c-9825-2fb3ee4b25df"),
                            FridgeId = new Guid("3f235359-e08e-4571-9e79-2f1f3f36c993"),
                            ProductId = new Guid("f11e43fd-1a39-452e-b78f-cbc692f279b6"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("baf54fd7-f7b2-4db9-a3b3-8b7cb5fd8f68"),
                            FridgeId = new Guid("3f235359-e08e-4571-9e79-2f1f3f36c993"),
                            ProductId = new Guid("faf6f6bf-28de-4a00-ace3-460daa990f4c"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("cf43436c-85b8-4cdd-bf3a-651408fbf25b"),
                            FridgeId = new Guid("6967eb7d-100f-4855-b512-14679298a40b"),
                            ProductId = new Guid("ea0e3faf-235f-4cf5-bbde-e536f65f3c95"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("9244e4e6-defc-40d2-b798-9b1032e4779f"),
                            FridgeId = new Guid("6967eb7d-100f-4855-b512-14679298a40b"),
                            ProductId = new Guid("e93ed1cc-812b-4859-9ab4-35fda086337b"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("ba6aa62d-501f-452b-8d1f-9e87d5eaf319"),
                            FridgeId = new Guid("6967eb7d-100f-4855-b512-14679298a40b"),
                            ProductId = new Guid("be24a440-b29d-44a5-8f8a-8b59fd546f8c"),
                            Quantity = 10
                        });
                });

            modelBuilder.Entity("Entities.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<int>("DefaultQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f11e43fd-1a39-452e-b78f-cbc692f279b6"),
                            DefaultQuantity = 3,
                            Name = "Картофель"
                        },
                        new
                        {
                            Id = new Guid("faf6f6bf-28de-4a00-ace3-460daa990f4c"),
                            DefaultQuantity = 5,
                            Name = "Морковь"
                        },
                        new
                        {
                            Id = new Guid("ea0e3faf-235f-4cf5-bbde-e536f65f3c95"),
                            DefaultQuantity = 9,
                            Name = "Яблоки"
                        },
                        new
                        {
                            Id = new Guid("e93ed1cc-812b-4859-9ab4-35fda086337b"),
                            DefaultQuantity = 3,
                            Name = "Свекла"
                        },
                        new
                        {
                            Id = new Guid("be24a440-b29d-44a5-8f8a-8b59fd546f8c"),
                            DefaultQuantity = 6,
                            Name = "Бананы"
                        });
                });

            modelBuilder.Entity("FridgeProduct", b =>
                {
                    b.Property<Guid>("FridgesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FridgesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("FridgeProduct");
                });

            modelBuilder.Entity("Entities.Models.Fridge", b =>
                {
                    b.HasOne("Entities.Models.FridgeModel", "FridgeModel")
                        .WithMany("Fridges")
                        .HasForeignKey("FridgeModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FridgeModel");
                });

            modelBuilder.Entity("Entities.Models.FridgeProducts", b =>
                {
                    b.HasOne("Entities.Models.Fridge", "Fridge")
                        .WithMany()
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FridgeProduct", b =>
                {
                    b.HasOne("Entities.Models.Fridge", null)
                        .WithMany()
                        .HasForeignKey("FridgesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Models.FridgeModel", b =>
                {
                    b.Navigation("Fridges");
                });
#pragma warning restore 612, 618
        }
    }
}
